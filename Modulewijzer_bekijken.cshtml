@using System.Data;
@using System.Data.SqlClient;
@using Modulewijzer.Models;
@using Modulewijzer.DataAccess;
@{
    Layout = "_Layout.cshtml";
    Page.title = "Modulewijzer";

    int ModulewijzerId = 0;
    string naam = "";
    string EC = "";
    string studiejaar = "";
    string periode = "";
    string werkvorm = "";
    string leeruitkomsten = "";
    string literatuur = "";
    string planning = "";
    string view_docent = "";
    string view_comp = "";
    List<string> docenten = new List<string>();
    List<string> competenties = new List<string>();

    if (!Request.QueryString["ModulewijzerId"].IsEmpty())
    {
        ModulewijzerId = Convert.ToInt32(Request.QueryString["ModulewijzerId"]);
        using (var connection = new SqlConnection(DbConnection.ConnectionString))
        {
            connection.Open();

            using (var command = connection.CreateCommand())
            {
                command.CommandText = "SELECT Naam, EC, Studiejaar, Periode, Werkvorm, Leeruitkomsten, Literatuur, Planning FROM Modulewijzer  WHERE ModulewijzerId = @ModulewijzerId";
                command.Parameters.AddWithValue("@ModulewijzerId", ModulewijzerId);
                command.ExecuteNonQuery();

                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        naam = reader.GetString(0);
                        EC = Convert.ToString(reader.GetInt32(1));
                        studiejaar = Convert.ToString(reader.GetInt32(2));
                        periode = Convert.ToString(reader.GetInt32(3));
                        werkvorm = reader.GetString(4);
                        leeruitkomsten = reader.GetString(5);
                        literatuur = reader.GetString(6);
                        planning = reader.GetString(7);
                    }
                }

            }
            connection.Close();
        }
    }
    else { Response.Redirect("Default"); }

    using (var connection = new SqlConnection(DbConnection.ConnectionString))
    {
        using (var command = connection.CreateCommand())
        {
            connection.Open();

            command.CommandText = "EXEC GetLinkedDocenten @ModuleId";
            command.Parameters.Add(new SqlParameter("@ModuleId", SqlDbType.Int) {Value = ModulewijzerId});

            using (var reader = command.ExecuteReader())
            {
                while (reader.Read())
                {
                    string voorletters = reader.GetString(1);
                    string achternaam = reader.GetString(2);
                    string tussenvoegsel = reader.GetString(3);
                    docenten.Add($"{voorletters}. {tussenvoegsel} {achternaam} ");
                }
            }

        }
        connection.Close();
    }

    using (var connection = new SqlConnection(DbConnection.ConnectionString))
    {
        using (var command = connection.CreateCommand())
        {
            connection.Open();

            command.CommandText = "EXEC GetLinkedCompetenties @ModuleId";
            command.Parameters.Add(new SqlParameter("@ModuleId", SqlDbType.Int) { Value = ModulewijzerId });

            using (var reader = command.ExecuteReader())
            {
                while (reader.Read())
                {
                    string comp_naam = reader.GetString(1);
                    string niveau = Convert.ToString(reader.GetInt32(2));
                    string competentie_beschrijving = reader.GetString(3);
                    competenties.Add($"{comp_naam} {niveau} {competentie_beschrijving} ");
                }
            }

        }
        connection.Close();
    }

    if (!Request.Form["Modulewijzer_verwijderen"].IsEmpty())
    {
        DbConnection.Instance.Module.Delete(ModulewijzerId);
        Response.Redirect("Default");
    }
}

<form method="post" id="Modulewijzer_verwijderen"></form>


<div>
    <h2>Modulewijzer</h2>
    <b>Naam</b><br /><p>@naam</p>
    <b>Docenten</b><br /><p>@foreach (string s in docenten) { view_docent = s; @view_docent}</p>
    <b>EC's</b><br /><p>@EC</p>
    <b>Studiejaar</b><br /><p>@studiejaar</p>
    <b>Periode</b><br /><p>@periode</p>
    <b>Werkvorm</b><br /><p>@werkvorm</p>
    <b>Leeruitkomsten</b><br /><p>@leeruitkomsten</p>
    <b>Competenties</b><br /><p>@foreach (string s in competenties) { view_comp = s; @view_comp <br />}</p>
    <b>Literatuur</b><br /><p>@literatuur</p>
    <b>Planning</b><br /><p>@planning</p>
    <hr />
    <a href="Default" class="btn btn-default" role="button"><i class="fa fa-arrow-circle-left" aria-hidden="true"></i> Terug</a>
    <a href="Genereer_PDF.cshtml?ModulewijzerId=@ModulewijzerId" class="btn btn-primary"><i class="fa fa-file-pdf-o" aria-hidden="true"></i> Maak PDF</a>
    <div style="float:right;">
        <p>
            <a href="Competentie_toevoegen?ModulewijzerId=@ModulewijzerId" class="btn btn-success" role="button"><i class="fa fa-plus" aria-hidden="true"></i> Competentie toevoegen</a>
            <a href="Leraar_toevoegen?ModulewijzerId=@ModulewijzerId" class="btn btn-success" role="button"><i class="fa fa-user-plus" aria-hidden="true"></i> Leraar toevoegen</a>
            <a href="Modulewijzer_aanpassen?ModulewijzerId=@ModulewijzerId" class="btn btn-primary" role="button"><i class="fa fa-pencil" aria-hidden="true"></i> Module aanpassen</a>
            <button type="submit" name="Modulewijzer_verwijderen" class="btn btn-danger" value="@ModulewijzerId" form="Modulewijzer_verwijderen"><i class="fa fa-trash" aria-hidden="true"></i> Module verwijderen</button>
        </p>
    </div>
</div>